@import url("https://fonts.googleapis.com/css2?family=Do+Hyeon&family=Jua&display=swap");

:root {
  --test-sample: "test-sample";

  /* color */

  /* size */

  /* font size */
  --font-large: 10px;
  --font-medium: 8px;
  --font-small: 6px;
  --font-micro: 4px;

  /* font */
  --font-default: sans-serif;
  --font-do-hyeon: "Do Hyeon", var(--font-default);
  --font-jua: "Jua", var(--font-default);
}

/* 

    <useful sites>
        HTML 작성 사이트: jsbin.com
        폰트 import 사이트: https://fonts.google.com/?preview.size=22&subset=korean
        web docs:   https://www.w3schools.com/cssref/
                    https://developer.mozilla.org/ko/docs/Web/CSS/box-sizing
        선택자: https://blog.naver.com/popssong/222582544350

    <selectors>

        작성 방법:
            element1((선택자)?(element2))*
            ex. 
                div.class#id {} -> 클래스가 class고 아이디가 id인 div태그들
                div.class#id p {} -> 위의 div안의 p태그들
                div.class#id > input[value="text"] {} -> 위의 div안의 자식요소 중(자식의 자식은 선택x) value가 "text"인 input태그들
                div.class#id > input.class1#id1[value="text"] {} -> 위의 input 태그들 중 클래스가 class1이고 아이디가 id1인 요소들
        선택자:
            '>': 자식선택자, element1 자식인 element2들(자식의 자식은 선택 x)
            ' ': 자손(하위)선택자, element1 안의 모든 element2들
            '+': 인접(형제)선택자, element1의 바로 옆 element2
            '~': 일반(형제)선택자, element1의 다음에 오는 모든 element2들
            ',': element1과 element2 모두
        element:
            작성 방법:
                (element)+
                ex. input -> 모든 input 박스들
                    input.class -> 클래스가 class인 모든 input 박스들
                    input.class.id -> 클래스가 class고 아이디가 id인 모든 input 박스들
                    input.class.id[value="text"] -> 클래스가 class고 아이디가 id이며, value가 "text"인 모든 input 박스들
            Universal: *
            type: Tag
            ID: #id
            Class: .class
            State: element:state
                :first-child
                :last-child
                :nth-child(
                    Int: Int번쨰 요소
                    2Int: 2의 배수
                    even: 짝수 순서의 요소
                    odd: 홀수 순서 요소
                )
                ...

                ex. button:hover {} -> 마우스를 위에 올린 버튼
            Attribute: element[Attribute] | element[Attribute <속성선택자> value]
                <속성선택자>
                    = : value와 같은가?
                    ^= : value로 시작하는가?
                    $= : value로 끝나는가?
                    *= : value를 포함하는가?
                    ~- : 공백으로 분리된 vlaue가 포함되는가
                    |= : 정확하게 value거나, 'value-' 로 시작하는가
                    
                ex. a[href] -> href 속성값이 있는 a 태그
                    a[href="naver.com"] -> href 속성값이 naver.com인 a 태그
    <styles>
        justify-content Flex 요소들을 가로선 상에서 정렬
        align-items     세로선 상에서 정렬
        flex-direction  정렬할 방향 지정
        order           Flex 요소의 순서 지정
        align-self      align-items 값을 무시하고 세로선 상에서 정렬
        flex-wrap       Flex 요소들을 한줄 또는 여로줄에 걸쳐 정렬
        flex-flow       flex-direction + flex-warp (간략히 요약)
        align-content   세로선 상에 여분의 공간이 있으면 Flex 컨테이너 사이의 간격 조절
    <Unit>
        Absolute: px, pt, cm, mm, in, pc ...
        Relative:
            em      : 지정된 font-family와는 관계 없이 부모의 폰트 사이즈에 따라 달라짐. 
                    -   html 기본 폰트사이즈 : 16px
                    -   부모의 폰트사이즈가 정의되지 않은 개체의 1em = 16px = 100%
                    -   부모의 폰트사이즈가 32px인 개체의 0.5em = 16px = 50%
            rem     : Root 즉, html에 정의된 폰트 사이즈에 따라 달라짐
            vw      : viewport's width = 100vw
            vh      : viewport's height = 100vh
            vmin    : small value of viewport's width and height = 100vmin
            vmax    : big value of viewport's width and height = 100vmax
            %       : 부모요소의 크기에 따라 달라짐
            ex      : font-family의 소문자 x의 높이 = 1ex
            ch      : font-family의 숫자 0의 너비 = 1ch
            
            
*/

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box; /* padding margin을 포함하여 사이즈 결정 */
}

body {
  font-family: var(--font-do-hyeon);
}
